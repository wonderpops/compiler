Key 1 1 var var
Ident 1 5 s s
Oper 1 6 : :
Key 1 7 string string
Sprt 1 13 ; ;
Key 2 1 procedure procedure
Ident 2 11 pr pr
Sprt 2 13 ( (
Ident 2 14 a a
Oper 2 15 : :
Key 2 16 string string
Sprt 2 22 ) )
Sprt 2 23 ; ;
Key 3 1 const const
Ident 3 7 n n
Oper 3 8 = =
Int 3 9 10 10
Sprt 3 11 ; ;
Key 4 1 var var
Ident 4 5 i i
Oper 4 6 : :
Key 4 7 integer integer
Sprt 4 14 ; ;
Key 5 1 begin begin
Key 6 4 for for
Ident 6 8 i i
Oper 6 9 := :=
Int 6 11 1 1
Key 6 13 to to
Ident 6 16 n n
Key 6 18 do do
Key 7 7 begin begin
Key 8 10 write write
Sprt 8 15 ( (
Ident 8 16 a a
Sprt 8 17 ) )
Sprt 8 18 ; ;
Key 9 10 writeln writeln
Sprt 9 17 ; ;
Key 10 7 end end
Sprt 10 10 ; ;
Key 11 1 end end
Sprt 11 4 ; ;
Key 12 1 begin begin
Key 13 4 writeln writeln
Sprt 13 11 ( (
Str 13 12 simvol 'simvol'
Sprt 13 20 ) )
Sprt 13 21 ; ;
Key 14 4 readln readln
Sprt 14 10 ( (
Ident 14 11 s s
Sprt 14 12 ) )
Sprt 14 13 ; ;
Ident 15 4 pr pr
Sprt 15 6 ( (
Ident 15 7 s s
Sprt 15 8 ) )
Sprt 15 9 ; ;
Key 16 1 end end
Sprt 16 4 . .
