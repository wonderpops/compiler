ProgramModuleNode(name=IdentificatorNode(name='a1'), params=ProgramParamsNode(params=[]), body=BlockNode(declarations=DeclarationsNode(constants=ConstDefBlockNode(constants=[]), variables=VarDeclBlockNode(variables=[VarDeclNode(idents=IdentListNode(idents=[IdentificatorNode(name='a')]), idsType=TypeNode(name='integer'))]), subprogs=SubprogDeclListNode(declList=[FunctionDeclNode(heading=FunctionHeadingNode(name=IdentificatorNode(name='raz'), params=FormalParametersNode(params=[OneFormalParamNode(ids=IdentListNode(idents=[IdentificatorNode(name='a')]), idsType=TypeNode(name='integer'))])), functType=TypeNode(name='integer'), block=BlockNode(declarations=DeclarationsNode(constants=ConstDefBlockNode(constants=[]), variables=VarDeclNode(idents=[], idsType=''), subprogs=SubprogDeclListNode(declList=[])), statementSequence=StatementSequenceNode(statements=[AssignmentNode(op=':=', varName=DesignatorNode(name='result', stuff=[]), expression=LiteralIntNode(value=0)), WhileNode(condition=BinaryOpNode(op='>', left=DesignatorNode(name='a', stuff=[]), right=LiteralIntNode(value=0)), trueStatement=StatementSequenceNode(statements=[AssignmentNode(op=':=', varName=DesignatorNode(name='a', stuff=[]), expression=BinaryOpNode(op='+', left=DesignatorNode(name='a', stuff=[]), right=LiteralIntNode(value=10))), AssignmentNode(op=':=', varName=DesignatorNode(name='result', stuff=[]), expression=BinaryOpNode(op='+', left=DesignatorNode(name='result', stuff=[]), right=LiteralIntNode(value=1)))]))])))])), statementSequence=StatementSequenceNode(statements=[InStatmentNode(name='readln', designatorList=DesignatorListNode(designators=[DesignatorNode(name=IdentificatorNode(name='a'), stuff=[])])), AssignmentNode(op=':=', varName=DesignatorNode(name='a', stuff=[]), expression=FunctionCallNode(name=IdentificatorNode(name='raz'), params=ActualParametersNode(params=ExpListNode(expressions=[])))), OutStatmentNode(name='write', expList=ExpListNode(expressions=[DesignatorNode(name='a', stuff=[])]))])))